#models.js

##story class
-getHostName() method
returns correct hostname
^done

##storyList class
* pass in array of stories on call

getStories() method
* make new stories from the objects parsed from the JSON of array of stories
* uses static so this method is called to make a new instance of storylist instead of calling new on storyList itself as the JSON object does not return instances of story objects but regular JS objects after it is parsed by axiom

-addStory( user, newStory )
Need to create this
make a POST request to the API for creating a new story
takes in user and story instance
^done

## user class

________
Building the UI for new story form/adding a new story

-Add a form in the HTML for the story. This should initially be hidden.^
-Add a link in the navbar with the text of “submit”.^
-Write a function in nav.js that is called when users click that navbar link. Look at the other function names in that file that do similar things and pick something descriptive and similar.^
-Write a function in stories.js that is called when users submit the form. Pick a good name for it. This function should get the data from the form, call the .addStory method you wrote, and then put that new story on the page.

#nav.js
make new function for adding the story

#stories.js

##story class
makes new function that
	grabs values in the text boxes
	makes new story object from passed in values
	call the .addstory method on the list of stories (storyList)
	

_________
Favoriting and unfavoriting 

#model.js

##user class

### addFavorite() method
* currently takes in a storyID and returns nothing, but updates the current user in memory's favorites along with the user stored in their API
- possibly want it to take in a story instead of a story ID

#stories.js

- add click handler function when clicking on a star, click handler is on the all-stories-list
it gets the ID from parent element of the story, calls the API with get story
(https://hack-or-snooze-v3.herokuapp.com/stories/<storyId>) and check if story is favorited or not,
then either call user.addFavorite() or user.unFavorite()

#model.js 

* user.addfavorite()/user.unfavorite takes in a story and favorites or unfavorites it in memory and in API.

#story.js

- we will need a function to put put favorite list on page.

________

favorites view

loop through the user's favorites and build it to the dom